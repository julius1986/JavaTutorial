Сериализация. Класс ObjectOutputStream
Для сериализации объектов в поток используется класс ObjectOutputStream. Он записывает данные в поток.

Для создания объекта ObjectOutputStream в конструктор передается поток, в который производится запись:


Для записи данных ObjectOutputStream использует ряд методов, среди которых можно выделить следующие:

void close(): закрывает поток

void flush(): очищает буфер и сбрасывает его содержимое в выходной поток

void write(byte[] buf): записывает в поток массив байтов

void write(int val): записывает в поток один младший байт из val

void writeBoolean(boolean val): записывает в поток значение boolean

void writeByte(int val): записывает в поток один младший байт из val

void writeChar(int val): записывает в поток значение типа char, представленное целочисленным значением

void writeDouble(double val): записывает в поток значение типа double

void writeFloat(float val): записывает в поток значение типа float

void writeInt(int val): записывает целочисленное значение int

void writeLong(long val): записывает значение типа long

void writeShort(int val): записывает значение типа short

void writeUTF(String str): записывает в поток строку в кодировке UTF-8

void writeObject(Object obj): записывает в поток отдельный объект




Десериализация. Класс ObjectInputStream
Класс ObjectInputStream отвечает за обратный процесс - чтение ранее сериализованных данных из потока. В конструкторе он принимает ссылку на поток ввода:


Функционал ObjectInputStream сосредоточен в методах, предназначенных для чтения различных типов данных. Рассмотрим основные методы этого класса:

void close(): закрывает поток

int skipBytes(int len): пропускает при чтении несколько байт, количество которых равно len

int available(): возвращает количество байт, доступных для чтения

int read(): считывает из потока один байт и возвращает его целочисленное представление

boolean readBoolean(): считывает из потока одно значение boolean

byte readByte(): считывает из потока один байт

char readChar(): считывает из потока один символ char

double readDouble(): считывает значение типа double

float readFloat(): считывает из потока значение типа float

int readInt(): считывает целочисленное значение int

long readLong(): считывает значение типа long

short readShort(): считывает значение типа short

String readUTF(): считывает строку в кодировке UTF-8

Object readObject(): считывает из потока объект